// Library Imports
const Web3 = require('web3');
const EthereumTx = require('ethereumjs-tx').Transaction;

// Connection Initialization
const rpcURL = "http://172.27.63.201:7545";
const web3 = new Web3(rpcURL);

// Data set up
let abi = '[{"inputs":[],"name":"getval","outputs":[{"components":[{"components":[{"internalType":"string","name":"unit","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"internalType":"structCrudApp.SS","name":"t","type":"tuple"},{"components":[{"internalType":"string","name":"unit","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"internalType":"structCrudApp.SS","name":"h","type":"tuple"},{"components":[{"internalType":"string","name":"unit","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"internalType":"structCrudApp.SS","name":"hI","type":"tuple"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"structCrudApp.Temp[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"string","name":"unit","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"internalType":"structCrudApp.SS","name":"t","type":"tuple"},{"components":[{"internalType":"string","name":"unit","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"internalType":"structCrudApp.SS","name":"h","type":"tuple"},{"components":[{"internalType":"string","name":"unit","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"internalType":"structCrudApp.SS","name":"hI","type":"tuple"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"structCrudApp.Temp","name":"recTemp","type":"tuple"}],"name":"setval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"weatherdb","outputs":[{"components":[{"internalType":"string","name":"unit","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"internalType":"structCrudApp.SS","name":"t","type":"tuple"},{"components":[{"internalType":"string","name":"unit","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"internalType":"structCrudApp.SS","name":"h","type":"tuple"},{"components":[{"internalType":"string","name":"unit","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"internalType":"structCrudApp.SS","name":"hI","type":"tuple"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"}]';
let bytecode = '608060405234801561001057600080fd5b50610dc5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806305bcfdea1461004657806331b6bd0614610079578063c2c4375814610097575b600080fd5b610060600480360381019061005b91906108ed565b6100b3565b6040516100709493929190610b16565b60405180910390f35b6100816102e5565b60405161008e9190610af4565b60405180910390f35b6100b160048036038101906100ac91906108a4565b61055e565b005b600081815481106100c357600080fd5b9060005260206000209060070201600091509050806000016040518060400160405290816000820180546100f690610c71565b80601f016020809104026020016040519081016040528092919081815260200182805461012290610c71565b801561016f5780601f106101445761010080835404028352916020019161016f565b820191906000526020600020905b81548152906001019060200180831161015257829003601f168201915b5050505050815260200160018201548152505090806002016040518060400160405290816000820180546101a290610c71565b80601f01602080910402602001604051908101604052809291908181526020018280546101ce90610c71565b801561021b5780601f106101f05761010080835404028352916020019161021b565b820191906000526020600020905b8154815290600101906020018083116101fe57829003601f168201915b50505050508152602001600182015481525050908060040160405180604001604052908160008201805461024e90610c71565b80601f016020809104026020016040519081016040528092919081815260200182805461027a90610c71565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b50505050508152602001600182015481525050908060060154905084565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561055557838290600052602060002090600702016040518060800160405290816000820160405180604001604052908160008201805461034c90610c71565b80601f016020809104026020016040519081016040528092919081815260200182805461037890610c71565b80156103c55780601f1061039a576101008083540402835291602001916103c5565b820191906000526020600020905b8154815290600101906020018083116103a857829003601f168201915b505050505081526020016001820154815250508152602001600282016040518060400160405290816000820180546103fc90610c71565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610c71565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b505050505081526020016001820154815250508152602001600482016040518060400160405290816000820180546104ac90610c71565b80601f01602080910402602001604051908101604052809291908181526020018280546104d890610c71565b80156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b50505050508152602001600182015481525050815260200160068201548152505081526020019060010190610309565b50505050905090565b600081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160008201518160000190805190602001906105af92919061062f565b5060208201518160010155505060208201518160020160008201518160000190805190602001906105e192919061062f565b50602082015181600101555050604082015181600401600082015181600001908051906020019061061392919061062f565b5060208201518160010155505060608201518160060155505050565b82805461063b90610c71565b90600052602060002090601f01602090048101928261065d57600085556106a4565b82601f1061067657805160ff19168380011785556106a4565b828001600101855582156106a4579182015b828111156106a3578251825591602001919060010190610688565b5b5090506106b191906106b5565b5090565b5b808211156106ce5760008160009055506001016106b6565b5090565b60006106e56106e084610b95565b610b70565b90508281526020810184848401111561070157610700610d41565b5b61070c848285610c2f565b509392505050565b60008135905061072381610d61565b92915050565b600082601f83011261073e5761073d610d32565b5b813561074e8482602086016106d2565b91505092915050565b60006040828403121561076d5761076c610d37565b5b6107776040610b70565b9050600082013567ffffffffffffffff81111561079757610796610d3c565b5b6107a384828501610729565b60008301525060206107b784828501610714565b60208301525092915050565b6000608082840312156107d9576107d8610d37565b5b6107e36080610b70565b9050600082013567ffffffffffffffff81111561080357610802610d3c565b5b61080f84828501610757565b600083015250602082013567ffffffffffffffff81111561083357610832610d3c565b5b61083f84828501610757565b602083015250604082013567ffffffffffffffff81111561086357610862610d3c565b5b61086f84828501610757565b60408301525060606108838482850161088f565b60608301525092915050565b60008135905061089e81610d78565b92915050565b6000602082840312156108ba576108b9610d4b565b5b600082013567ffffffffffffffff8111156108d8576108d7610d46565b5b6108e4848285016107c3565b91505092915050565b60006020828403121561090357610902610d4b565b5b60006109118482850161088f565b91505092915050565b60006109268383610a65565b905092915050565b600061093982610bd6565b6109438185610bf9565b93508360208202850161095585610bc6565b8060005b858110156109915784840389528151610972858261091a565b945061097d83610bec565b925060208a01995050600181019050610959565b50829750879550505050505092915050565b6109ac81610c1b565b82525050565b60006109bd82610be1565b6109c78185610c0a565b93506109d7818560208601610c3e565b6109e081610d50565b840191505092915050565b60006040830160008301518482036000860152610a0882826109b2565b9150506020830151610a1d60208601826109a3565b508091505092915050565b60006040830160008301518482036000860152610a4582826109b2565b9150506020830151610a5a60208601826109a3565b508091505092915050565b60006080830160008301518482036000860152610a8282826109eb565b91505060208301518482036020860152610a9c82826109eb565b91505060408301518482036040860152610ab682826109eb565b9150506060830151610acb6060860182610ad6565b508091505092915050565b610adf81610c25565b82525050565b610aee81610c25565b82525050565b60006020820190508181036000830152610b0e818461092e565b905092915050565b60006080820190508181036000830152610b308187610a28565b90508181036020830152610b448186610a28565b90508181036040830152610b588185610a28565b9050610b676060830184610ae5565b95945050505050565b6000610b7a610b8b565b9050610b868282610ca3565b919050565b6000604051905090565b600067ffffffffffffffff821115610bb057610baf610d03565b5b610bb982610d50565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610c5c578082015181840152602081019050610c41565b83811115610c6b576000848401525b50505050565b60006002820490506001821680610c8957607f821691505b60208210811415610c9d57610c9c610cd4565b5b50919050565b610cac82610d50565b810181811067ffffffffffffffff82111715610ccb57610cca610d03565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610d6a81610c1b565b8114610d7557600080fd5b50565b610d8181610c25565b8114610d8c57600080fd5b5056fea264697066735822122096add3cc03dc264ad1d1c89f7b920e16f3b45bbc46b3234cc06471fd1c37439164736f6c63430008070033';
let conAddress = "0xBD378FF3402E392619454ae66B3dA55AD4F0739a"

//Contract object and account info
let deploy_contract = new web3.eth.Contract(JSON.parse(abi),conAddress);
let account = '0x7c2088F378d3cc16b609f667af2326D560Fc8344';
// Function Parameter
output = [["celsius",24],["percentage",5],["celsius",23],1638991991503];
let payload = {
    data: bytecode
}

let parameter = {
    from: account,
    gas: web3.utils.toHex(900000),
    gasPrice: web3.utils.toHex(web3.utils.toWei('100', 'gwei'))
}
let transactionHash = '0xe0c5c3b2725b0a195e36fded47d1295f8d71b6a7f7f4a14fc6001ea5985a407d';
// Function Call
deploy_contract.deploy(payload).send(parameter, (err, transactionHash='0xFaC2ccf4322580A6A6A43D121b92Ebb6520bCc85FceCECcf8A6383b995b91B60') => {
   console.log('Transaction Hash :', transactionHash);
}).on('confirmation', () => {}).then((newContractInstance) => {
    console.log('Deployed Contract Address : ', newContractInstance.options.address);
})

deploy_contract.methods.setval(output).send({from: account,gas:813325});

const foo = await deploy_contract.methods.getval().call()

console.log('CAll : ', String(foo));